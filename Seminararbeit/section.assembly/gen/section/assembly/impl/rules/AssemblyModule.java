package section.assembly.impl.rules;

import org.eclipse.emf.henshin.model.HenshinFactory;
import org.eclipse.emf.henshin.model.Module;
import org.eclipse.emf.henshin.model.Unit;
import org.eclipse.emf.henshin.model.SequentialUnit;
import org.eclipse.emf.henshin.model.Rule;
import org.eclipse.emf.henshin.model.Graph;
import org.eclipse.emf.henshin.model.Node;
import de.iils.dc43.core.graph.Edge;
import org.eclipse.emf.henshin.model.MappingList;
import org.eclipse.emf.henshin.model.NestedCondition;
import org.eclipse.emf.henshin.model.Attribute;
import org.eclipse.emf.henshin.model.Parameter;
import org.eclipse.emf.henshin.model.ParameterKind;
import org.eclipse.emf.henshin.model.AttributeCondition;
import de.iils.dc43.core.graph.impl.GraphPackageImpl;
import org.eclipse.emf.henshin.model.Annotation;
import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.emf.ecore.EcorePackage;
import dc43Utilities.impl.Dc43UtilitiesPackageImpl;
import java.util.Map;
import java.util.HashMap;
import tec.uom.se.NumberQuantity;
import de.iils.dc43.core.ecore.IRuleProvider;
import java.lang.reflect.Method;
import java.util.Comparator;
import de.iils.dc43.core.exceptions.ExceptionUtil;
import section.assembly.impl.AssemblyPackageImpl;
// Generated by: DC43RuleCodeGenerator2023-02-28T23:07:00.707+0100
@SuppressWarnings("all")
public final class AssemblyModule implements IRuleProvider<Module> {
	public static final AssemblyModule INSTANCE = init();
	private static boolean isInited = false;
	private Module module;
	private AssemblyModule() {};
	public static AssemblyModule init() {
		if(isInited) {
			return INSTANCE;
		}
		AssemblyModule self = new AssemblyModule();
		self.initContents();
		isInited = true;
		return self;
	}

	public Module getRules() {
		return module;
	}
	private void initContents() {
		module = HenshinFactory.eINSTANCE.createModule();
		module.setName("Assembly");

		Comparator<Method> methodComparator = Comparator.comparing(Method::getName);
		Method[] methods = getClass().getDeclaredMethods();
		java.util.Arrays.asList(methods).stream().filter(m -> m.getName().startsWith("create"))
			.sorted(methodComparator.reversed()).forEach(m -> {
				try { m.invoke(this); }
				catch(Exception e) { ExceptionUtil.sneakyThrow(e); }
			});
	}

	//RULES
private Rule axiom_rule;
private void createAxiom() {
  // Generated by: RuleProvider
  Rule CGNP_rule = HenshinFactory.eINSTANCE.createRule("Axiom");
  CGNP_rule.setActivated(true);

  Rule CGNP_multiRule = HenshinFactory.eINSTANCE.createRule();
  CGNP_multiRule.setActivated(true);
  CGNP_rule.getMultiRules().add(CGNP_multiRule);
  module.getUnits().add(CGNP_rule);

  // Generated by: GraphProvider
  Graph CGNP_lhsGraph = HenshinFactory.eINSTANCE.createGraph("LHS");
  Graph CGNP_rhsGraph = HenshinFactory.eINSTANCE.createGraph("RHS");

  Graph CGNP_lhsMultiGraph = HenshinFactory.eINSTANCE.createGraph("LHS");
  Graph CGNP_rhsMultiGraph = HenshinFactory.eINSTANCE.createGraph("RHS");

  CGNP_rule.setLhs(CGNP_lhsGraph);
  CGNP_rule.setRhs(CGNP_rhsGraph);
  CGNP_multiRule.setLhs(CGNP_lhsMultiGraph);
  CGNP_multiRule.setRhs(CGNP_rhsMultiGraph);

  // Generated by: NodeProvider
  Node CGNP_inst1 = HenshinFactory.eINSTANCE.createNode(CGNP_rhsMultiGraph, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile(), "inst1");


  Node CGNP_inst2 = HenshinFactory.eINSTANCE.createNode(CGNP_rhsMultiGraph, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile(), "inst2");


  Node CGNP_inst3 = HenshinFactory.eINSTANCE.createNode(CGNP_rhsMultiGraph, section.impl.SectionPackageImpl.eINSTANCE.getSection(), "inst3");


  // Generated by: AttributeProvider
  Attribute CGNP_inst2_i = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst2, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_I(), "JS_QUERY_VARIABLE0");

  Attribute CGNP_inst3_nPanelX = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NPanelX(), "JS_QUERY_VARIABLE1");

  Attribute CGNP_inst3_nSpante = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NSpante(), "JS_QUERY_VARIABLE2");

  Attribute CGNP_inst3_nPanelZ = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NPanelZ(), "JS_QUERY_VARIABLE3");

  Attribute CGNP_inst1_hA = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst1, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_HA(), "JS_QUERY_VARIABLE4");

  Attribute CGNP_inst1_i = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst1, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_I(), "JS_QUERY_VARIABLE5");

  Attribute CGNP_inst2_hA = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst2, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_HA(), "JS_QUERY_VARIABLE6");

  Attribute CGNP_inst3_nRivetColumnsBS_v = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetColumnsBS_v(), "JS_QUERY_VARIABLE7");

  Attribute CGNP_inst1_r2a = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst1, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_R2a(), "JS_QUERY_VARIABLE8");

  Attribute CGNP_inst3_nRivetClip_floor = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetClip_floor(), "JS_QUERY_VARIABLE9");

  Attribute CGNP_inst3_nRivetClip_wall2 = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetClip_wall2(), "JS_QUERY_VARIABLE10");

  Attribute CGNP_inst3_l = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_L(), "JS_QUERY_VARIABLE11");

  Attribute CGNP_inst2_r2a = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst2, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_R2a(), "JS_QUERY_VARIABLE12");

  Attribute CGNP_inst3_nRivetColumnsBS_h = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetColumnsBS_h(), "JS_QUERY_VARIABLE13");

  Attribute CGNP_inst3_zA = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_ZA(), "JS_QUERY_VARIABLE14");

  Attribute CGNP_inst3_clipFloorLenght = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_ClipFloorLenght(), "JS_QUERY_VARIABLE15");

  Attribute CGNP_inst3_nRivetClip_wall1_v = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetClip_wall1_v(), "JS_QUERY_VARIABLE16");

  Attribute CGNP_inst3_nRivetRowsBS_h = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetRowsBS_h(), "JS_QUERY_VARIABLE17");

  Attribute CGNP_inst3_clipFloorWidth = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_ClipFloorWidth(), "JS_QUERY_VARIABLE18");

  Attribute CGNP_inst3_nRivetClip_wall1_h = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetClip_wall1_h(), "JS_QUERY_VARIABLE19");

  Attribute CGNP_inst3_nRivetRowsBS_v = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NRivetRowsBS_v(), "JS_QUERY_VARIABLE20");

  Attribute CGNP_inst3_h = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_H(), "JS_QUERY_VARIABLE21");

  Attribute CGNP_inst2_r1a = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst2, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_R1a(), "JS_QUERY_VARIABLE22");

  Attribute CGNP_inst1_r1a = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst1, section.impl.SectionPackageImpl.eINSTANCE.getSectionProfile_R1a(), "JS_QUERY_VARIABLE23");

  Attribute CGNP_inst3_buttStrapWidth = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_ButtStrapWidth(), "JS_QUERY_VARIABLE24");

  Attribute CGNP_inst3_stringerCouplingLenght = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_StringerCouplingLenght(), "JS_QUERY_VARIABLE25");

  Attribute CGNP_inst3_nStringer = HenshinFactory.eINSTANCE.createAttribute(CGNP_inst3, section.impl.SectionPackageImpl.eINSTANCE.getSection_NStringer(), "JS_QUERY_VARIABLE26");

  // Generated by: OperationProvider
  // Generated by: EdgeProvider
  HenshinFactory.eINSTANCE.createEdge(CGNP_inst3, CGNP_inst1, section.impl.SectionPackageImpl.eINSTANCE.getSection_Profile());

  HenshinFactory.eINSTANCE.createEdge(CGNP_inst3, CGNP_inst2, section.impl.SectionPackageImpl.eINSTANCE.getSection_Profile());

  // Generated by: MappingProvider

  // Generated by: RuleBuilder
  Annotation CGNP_annotation_0 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_0.setKey("QUANTITY");
  CGNP_annotation_0.setValue("JS_QUERY_VARIABLE3=2.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_0);

  Annotation CGNP_annotation_1 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_1.setKey("QUANTITY");
  CGNP_annotation_1.setValue("JS_QUERY_VARIABLE20=6.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_1);

  Annotation CGNP_annotation_2 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_2.setKey("QUANTITY");
  CGNP_annotation_2.setValue("JS_QUERY_VARIABLE15=4.0 deg");
  CGNP_rule.getAnnotations().add(CGNP_annotation_2);

  Annotation CGNP_annotation_3 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_3.setKey("QUANTITY");
  CGNP_annotation_3.setValue("JS_QUERY_VARIABLE16=4.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_3);

  Annotation CGNP_annotation_4 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_4.setKey("QUANTITY");
  CGNP_annotation_4.setValue("JS_QUERY_VARIABLE6=300.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_4);

  Annotation CGNP_annotation_5 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_5.setKey("QUANTITY");
  CGNP_annotation_5.setValue("JS_QUERY_VARIABLE22=2000.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_5);

  Annotation CGNP_annotation_6 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_6.setKey("QUANTITY");
  CGNP_annotation_6.setValue("JS_QUERY_VARIABLE18=20.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_6);

  Annotation CGNP_annotation_7 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_7.setKey("QUANTITY");
  CGNP_annotation_7.setValue("JS_QUERY_VARIABLE8=1500.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_7);

  Annotation CGNP_annotation_8 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_8.setKey("QUANTITY");
  CGNP_annotation_8.setValue("JS_QUERY_VARIABLE10=2.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_8);

  Annotation CGNP_annotation_9 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_9.setKey("QUANTITY");
  CGNP_annotation_9.setValue("JS_QUERY_VARIABLE26=2.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_9);

  Annotation CGNP_annotation_10 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_10.setKey("QUANTITY");
  CGNP_annotation_10.setValue("JS_QUERY_VARIABLE11=4000.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_10);

  Annotation CGNP_annotation_11 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_11.setKey("QUANTITY");
  CGNP_annotation_11.setValue("JS_QUERY_VARIABLE17=4.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_11);

  Annotation CGNP_annotation_12 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_12.setKey("QUANTITY");
  CGNP_annotation_12.setValue("JS_QUERY_VARIABLE1=2.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_12);

  Annotation CGNP_annotation_13 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_13.setKey("QUANTITY");
  CGNP_annotation_13.setValue("JS_QUERY_VARIABLE13=6.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_13);

  Annotation CGNP_annotation_14 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_14.setKey("QUANTITY");
  CGNP_annotation_14.setValue("JS_QUERY_VARIABLE9=5.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_14);

  Annotation CGNP_annotation_15 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_15.setKey("QUANTITY");
  CGNP_annotation_15.setValue("JS_QUERY_VARIABLE5=1.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_15);

  Annotation CGNP_annotation_16 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_16.setKey("QUANTITY");
  CGNP_annotation_16.setValue("JS_QUERY_VARIABLE19=7.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_16);

  Annotation CGNP_annotation_17 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_17.setKey("QUANTITY");
  CGNP_annotation_17.setValue("JS_QUERY_VARIABLE24=100.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_17);

  Annotation CGNP_annotation_18 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_18.setKey("QUANTITY");
  CGNP_annotation_18.setValue("JS_QUERY_VARIABLE21=120.0 deg");
  CGNP_rule.getAnnotations().add(CGNP_annotation_18);

  Annotation CGNP_annotation_19 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_19.setKey("QUANTITY");
  CGNP_annotation_19.setValue("JS_QUERY_VARIABLE0=0.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_19);

  Annotation CGNP_annotation_20 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_20.setKey("QUANTITY");
  CGNP_annotation_20.setValue("JS_QUERY_VARIABLE23=1500.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_20);

  Annotation CGNP_annotation_21 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_21.setKey("QUANTITY");
  CGNP_annotation_21.setValue("JS_QUERY_VARIABLE12=1800.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_21);

  Annotation CGNP_annotation_22 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_22.setKey("QUANTITY");
  CGNP_annotation_22.setValue("JS_QUERY_VARIABLE2=2.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_22);

  Annotation CGNP_annotation_23 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_23.setKey("QUANTITY");
  CGNP_annotation_23.setValue("JS_QUERY_VARIABLE14=30.0 deg");
  CGNP_rule.getAnnotations().add(CGNP_annotation_23);

  Annotation CGNP_annotation_24 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_24.setKey("QUANTITY");
  CGNP_annotation_24.setValue("JS_QUERY_VARIABLE25=300.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_24);

  Annotation CGNP_annotation_25 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_25.setKey("QUANTITY");
  CGNP_annotation_25.setValue("JS_QUERY_VARIABLE4=0.0 mm");
  CGNP_rule.getAnnotations().add(CGNP_annotation_25);

  Annotation CGNP_annotation_26 = HenshinFactory.eINSTANCE.createAnnotation();
  CGNP_annotation_26.setKey("QUANTITY");
  CGNP_annotation_26.setValue("JS_QUERY_VARIABLE7=4.0");
  CGNP_rule.getAnnotations().add(CGNP_annotation_26);

  axiom_rule = CGNP_rule;
}
public Rule getAxiom() {
  return axiom_rule;
}

}